<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 로그인 처리 실패 시 -->
    <bean id="loginFailHandler" class="com.matjo.pickafood.admin.security.handler.CustomLoginFailHandler"></bean>

    <security:http>
        <!--<security:form-login login-page="/customLogin" authentication-failure-handler-ref="loginFailHandler"/>-->
        <security:form-login></security:form-login>

        <!--
        servlet 에 security:global-method-security 를 설정해서 지워도 된다.
        <security:intercept-url pattern="/sample/all"></security:intercept-url>
        <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"></security:intercept-url>
        <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"></security:intercept-url>-->


        <security:access-denied-handler error-page="/accessError"></security:access-denied-handler>

        <security:csrf disabled="true"></security:csrf>

        <security:remember-me key="12345678" data-source-ref="dataSource"></security:remember-me>

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <context:component-scan base-package="com.matjo.pickafood.admin.security"></context:component-scan>

</beans>


